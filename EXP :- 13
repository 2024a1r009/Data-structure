//Binary tree implementation using array .
#include<stdio.h>
#include<stdlib.h>
#define MAX 100
int tree[MAX];
int size=0;
void insert(int n ){
    printf("Enter the elements = ");
    for(int i=0;i<n;i++){// inserting elements in BT in level order.
       scanf("%d",&tree[size++]);
    }   
   }


   void preorder(int root){
    if(tree[root]==-1){
    return;}

    printf("%d ",tree[root]);
    preorder(2*root+1);
    preorder(2*root+2);
   }


   void init(){
    for(int i=0;i<MAX;i++){
tree[i]=-1; //root node
    }
}

void inorder(int root){
    if(tree[root]==-1){
        return;}
    inorder(2*root+1);
     printf("%d ",tree[root]);
        inorder(2*root+2);
}
void postorder(int root){
    if(tree[root]==-1){
        return;}
    postorder(2*root+1);
    postorder(2*root+2);
     printf("%d ",tree[root]);
       
}

int search( int target, int root){
   if(tree[root]==-1)
   return 0;
  if(tree[root]==target)
    return 1;
    return search(target,2*root+1)||search(target,2*root+2); //preorder concept.
  
}

int search1(int target, int root){ // search element in BT in level order.
    for( int i=0;i<size;i++){
        if(tree[i]==target)
        return i;
    }
    return -1;
}
void delete(int val, int root){
    int i = search1(val,0);
    if(i!=-1){
        tree[i]= tree[size-1];
        tree[size-1]=-1;
        size--;
        printf("Elemented deleted\n");
    }
    else
    printf("Element not found\n");

}


int main(){
    int n;
    while(1){
        printf("1. Insert\n");
        printf("2. Pre-order\n");
        printf("3. Inorder\n");
        printf("4. post-order\n");
        printf("5. search\n");
        printf("6. Delete\n");
        printf("7. Exit\n");
int choice,value,index;

scanf("%d",&choice);

switch(choice){
   case 1 :
printf("Enter the value of n = ");
scanf("%d",&n);
 init();
insert(n);
printf("\n");
break;

case 2:  
preorder(0);
break;

case 3:
inorder(0);
break;

case 4:
postorder(0);
break;

case 5:
printf("Enter the value = ");
scanf("%d",&value);
int yo=search1(value,0);
if(yo!=-1){
printf("Found\n");}
else{
    printf("Not found\n");
}
break;

case 6:
printf("Enter the element that you want to delete = \n");
int y;
scanf("%d",&y);
delete(y,0);
break;

case 7:
exit(0);
break;

default:
printf("Invalid\n");
}
    }
   /* int n;
    printf("Enter the value of n = ");
    scanf("%d",&n);
    init();
insert(n);
printf("\n Pre-order = ");
preorder(0);
printf("\n In-order = ");
inorder(0);
printf("\n Post-order = ");
postorder(0);
printf("\nEnter the element you want to search = ");
int target;
scanf("%d",&target);
int yo=search1(target,0);
printf("%d\n",yo);
printf("\nEnter the element that you want to delete = ");
int y;
scanf("%d",&y);
delete(y,0);
preorder(0);*/
}
