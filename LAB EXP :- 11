//date - 16
//queue implementation using ll
 #include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node* next;
};
struct node* rear=NULL;
struct node* front=NULL;

void enqueue(int value){
struct node* temp= (struct node *)malloc(sizeof(struct node));
if(temp==NULL){
    printf("queue overflow!!\n");
}
else{
    temp->data=value;
    temp->next=NULL;
    if(rear==NULL)
    front=rear=temp;
    else{
        rear->next=temp;
        rear=temp;
        printf("%d inserted in queue\n",value);
    }
}
}
int dequeue(){
    if(front==NULL){
        printf("Queue underflow!!\n");
        return -1;

    }
    else{
        struct node * temp=front;
        front=front->next;
        if(front==NULL){
            rear=NULL;}
            int val=temp->data;
            free(temp);
            return val;
        
    }

}
int  peek(){
    return (front!=NULL)?front->data:-1;
}
void display(){
    if(front==NULL){
        printf(" Queue is empty!!\n");
    
    }
    else{
        printf("queue elements are = \n");
        struct node * temp =front;
        while(temp!=NULL){
            printf("%d\n",temp->data);
            temp=temp->next;
        }
    }
}

int main(){
    while(1){
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. peek\n");
        printf("4. Display\n");
        printf("5. exit\n");
        int choice,val,res;
        printf("Enter choice = ");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            printf("Enter value = ");
            scanf("%d",&val);
            enqueue(val);
            break;
            case 2:
            res=dequeue();
            if(res!=-1)
            printf("%d dequeue from the stack!!!\n",res);
            break;
            
            case 3:
            res=peek();
            if(res!=-1)
            printf("%d\n",res);
else{
    printf("stack is empty!!\n");
}
            break;
            case 4:
         display();
            break;
            case 5:
           exit(0);
           default:
           printf("Invalid choice!!!\n");

        }
    }
}
